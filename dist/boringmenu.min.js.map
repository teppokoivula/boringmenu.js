{"mappings":"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","sources":["src/boringmenu.js","src/app.js"],"sourcesContent":["'use strict';\n\n/**\n * boringmenu.js\n *\n * @version 0.3.6\n */\nexport default class boringmenu {\n\n\t/**\n\t * Constructor\n\t *\n\t * @param {Object} options Options for an instance of boringmenu\n\t */\n\tconstructor(options = {}) {\n\n\t\t// Default options\n\t\tthis.defaultOptions = {\n\t\t\tselectors: {\n\t\t\t\tmenu: '.boringmenu',\n\t\t\t\titem: ':scope > li',\n\t\t\t},\n\t\t\tclasses: {\n\t\t\t\titem: 'boringmenu__item',\n\t\t\t\titemActive: 'boringmenu__item--active',\n\t\t\t\titemParent: 'boringmenu__item--parent',\n\t\t\t\ttoggle: 'boringmenu__toggle',\n\t\t\t\ttoggleTextContainer: 'boringmenu__sr-only',\n\t\t\t},\n\t\t\tlabels: {\n\t\t\t\t'menu.open': 'Open',\n\t\t\t\t'menu.close': 'Close',\n\t\t\t},\n\t\t\ticons: {\n\t\t\t\t'menu.open': 'fas fa-plus',\n\t\t\t\t'menu.close': 'fas fa-times',\n\t\t\t},\n\t\t\tid: 'boringmenu-' + this.getID(),\n\t\t\tmode: 'default',\n\t\t};\n\n\t\t// Polyfills for IE11\n\t\tthis.polyfills();\n\n\t\t// Merge our provided options with defaults\n\t\tthis.options = this.mergeOptions(options);\n\n\t\t// Find menu element and bail out early if none found\n\t\tthis.menu = document.querySelector(this.options.selectors.menu);\n\t\tif (!this.menu) {\n\t\t\t// Trigger the init done event in case some third party is waiting for this to happen\n\t\t\tdocument.dispatchEvent(new CustomEvent('boringmenu-init-done'));\n\t\t\treturn;\n\t\t}\n\n\t\t// Set root menu depth\n\t\tthis.menu.setAttribute('data-boringmenu-depth', 1);\n\n\t\t// Running counter for menu num\n\t\tthis.menuNum = 0;\n\n\t\t// Menu object stash\n\t\tthis.menuObjects = [this.menu];\n\n\t\t// Merge menu options with existing options\n\t\tif (this.menu.getAttribute('data-boringmenu')) {\n\t\t\ttry {\n\t\t\t\tthis.options = this.mergeOptions(JSON.parse(this.menu.getAttribute('data-boringmenu'), this.options));\n\t\t\t} catch(e) {};\n\t\t}\n\n\t\t// Add active and parent classes\n\t\tthis.addClasses(this.menu, this.options.classes);\n\n\t\t// Find submenu elements and create toggles\n\t\tthis.findSubMenus(this.menu);\n\n\t\t// Trigger event when menu has been initialized\n\t\tthis.menu.dispatchEvent(new CustomEvent('boringmenu-init-done', {\n\t\t\tbubbles: true,\n\t\t\tcancelable: true\n\t\t}));\n\t}\n\n\t/**\n\t * Add active and parent classes\n\t *\n\t * @param {Object} menu\n\t * @param {Object} classes\n\t */\n\taddClasses(menu, classes) {\n\t\tconst currentPath = window.location.pathname.replace(/\\/$/, '') + '/';\n\t\tmenu.querySelectorAll('.' + classes.item + '[href=\"' + currentPath + '\"]').forEach(item => {\n\t\t\titem.classList.add(classes.itemActive);\n\t\t\titem = item.parentNode;\n\t\t\twhile (item.parentNode) {\n\t\t\t\titem = item.parentNode;\n\t\t\t\tif (item.tagName == 'LI') {\n\t\t\t\t\tconst childItem = item.firstChild;\n\t\t\t\t\tif (childItem !== null && childItem.classList.contains(classes.item) && !childItem.classList.contains(classes.itemActive)) {\n\t\t\t\t\t\tchildItem.classList.add(classes.itemParent);\n\t\t\t\t\t}\n\t\t\t\t} else if (item.matches(this.options.selectors.menu)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Find submenu elements and create toggles\n\t *\n\t * @param {Object} menu\n\t * @param {Number} depth\n\t */\n\tfindSubMenus(menu, depth = 2) {\n\t\tmenu.querySelectorAll(this.options.selectors.item).forEach((item) => {\n\n\t\t\t// Look for a submenu, bail out early if none found\n\t\t\tconst submenu = item.querySelector('ul');\n\t\t\tif (!submenu) return;\n\n\t\t\t// Add unique ID and keep track of depth\n\t\t\tthis.menuNum++;\n\t\t\tsubmenu.setAttribute('id', this.options.id + '-' + this.menuNum);\n\t\t\tsubmenu.setAttribute('data-boringmenu-depth', depth);\n\n\t\t\t// Hide menu\n\t\t\tif (!item.classList.contains(this.options.classes.itemActive) && !item.querySelector('.' + this.options.classes.itemActive)) {\n\t\t\t\tsubmenu.hidden = true;\n\t\t\t}\n\n\t\t\t// Insert toggle button before menu item\n\t\t\tsubmenu.parentNode.insertBefore(this.getToggle(submenu), submenu);\n\n\t\t\t// Store menu in stash\n\t\t\tthis.menuObjects.push(submenu);\n\n\t\t\t// Find nested submenu elements\n\t\t\tthis.findSubMenus(submenu, depth + 1);\n\t\t});\n\t}\n\n\t/**\n\t * Helper function for displaying or hiding a menu\n\t *\n\t * @param {Object} menu\n\t * @param {Object} menuToggle\n\t * @param {Object} menuToggleText\n\t * @param {(Object|null)} menuToggleIcon\n\t * @param {boolean} hiddenState\n\t * @param {boolean} triggerEvent\n\t * @param {boolean} isRecursive\n\t */\n\ttoggleMenu(menu, menuToggle, menuToggleText, menuToggleIcon, hiddenState, triggerEvent = true, isRecursive = false) {\n\t\tmenu.hidden = hiddenState;\n\t\tmenu.menuToggleIcon = menu.menuToggleIcon || null;\n\t\tmenuToggle.setAttribute('aria-expanded', !menu.hidden);\n\t\tmenuToggleText.nodeValue = this.options.labels[menu.hidden ? 'menu.open' : 'menu.close'];\n\t\tif (menuToggleIcon != null) {\n\t\t\tmenu.menuToggleIcon = this.getToggleIcon(menu);\n\t\t\tmenuToggleIcon.parentNode.replaceChild(menu.menuToggleIcon, menuToggleIcon);\n\t\t}\n\t\tif (!isRecursive && this.options.mode === 'accordion') {\n\t\t\tthis.menuObjects.forEach(menuObject => {\n\t\t\t\tif (menuObject.id === menu.id || menuObject.hidden || menuObject.contains(menu) || !menuObject.menuToggle) return;\n\t\t\t\tthis.toggleMenu(menuObject, menuObject.menuToggle, menuObject.menuToggleText, menuObject.menuToggleIcon, true, true, true);\n\t\t\t});\n\t\t}\n\t\tif (triggerEvent) {\n\t\t\tthis.menu.dispatchEvent(new CustomEvent('boringmenu-menu-toggle-done', {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true,\n\t\t\t\tdetail: {\n\t\t\t\t\t'menu': menu,\n\t\t\t\t\t'menuDepth': menu.getAttribute('data-boringmenu-depth'),\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\t/**\n\t * Get menu toggle element (button)\n\t *\n\t * @param {Object} submenu\n\t * @returns {Object}\n\t */\n\tgetToggle(submenu) {\n\n\t\t// Create menu toggle button\n\t\tconst menuToggle = document.createElement('button');\n\t\tmenuToggle.classList.add(this.options.classes.toggle);\n\t\tmenuToggle.setAttribute('aria-haspopup', 'true');\n\t\tmenuToggle.setAttribute('aria-expanded', !submenu.hidden);\n\t\tmenuToggle.setAttribute('aria-controls', submenu.getAttribute('id'));\n\n\t\t// Add text within container\n\t\tconst menuToggleTextContainer = document.createElement('span');\n\t\tif (this.options.classes.toggleTextContainer) {\n\t\t\tmenuToggleTextContainer.classList.add(this.options.classes.toggleTextContainer);\n\t\t}\n\t\tmenuToggle.appendChild(menuToggleTextContainer);\n\t\tconst menuToggleText = document.createTextNode(this.options.labels[submenu.hidden ? 'menu.open' : 'menu.close']);\n\t\tmenuToggleTextContainer.appendChild(menuToggleText);\n\n\t\t// Add icon (optional)\n\t\tlet menuToggleIcon = this.getToggleIcon(submenu);\n\t\tif (menuToggleIcon != null) {\n\t\t\tmenuToggle.appendChild(menuToggleIcon);\n\t\t}\n\n\t\t// Store references to toggle objects in menu\n\t\tsubmenu.menuToggle = menuToggle;\n\t\tsubmenu.menuToggleText = menuToggleText;\n\t\tsubmenu.menuToggleIcon = menuToggleIcon;\n\n\t\t// Add click event listener\n\t\tmenuToggle.addEventListener('click', (event) => {\n\t\t\tevent.stopPropagation();\n\t\t\tthis.toggleMenu(submenu, submenu.menuToggle, submenu.menuToggleText, submenu.menuToggleIcon, !submenu.hidden);\n\t\t});\n\n\t\t// Add keydown event listener\n\t\tmenuToggle.addEventListener('keydown', (event) => {\n\t\t\tlet hiddenState;\n\t\t\t// 40 = down, 38 = up, 13 = enter, 32 = space\n\t\t\tif ([40, 38, 13, 32].indexOf(event.keyCode) > -1) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\thiddenState = event.keyCode === 40 ? false : (event.keyCode === 38 ? true : !submenu.hidden);\n\t\t\t\tthis.toggleMenu(submenu, submenu.menuToggle, submenu.menuToggleText, submenu.menuToggleIcon, hiddenState);\n\t\t\t}\n\t\t});\n\n\t\treturn menuToggle;\n\t}\n\n\t/**\n\t * Get menu toggle icon\n\t *\n\t * @param {Object} submenu\n\t * @param {(Object|null)} menuToggleIcon\n\t * @returns {(Object|null)}\n\t */\n\tgetToggleIcon(submenu, menuToggleIcon) {\n\t\tmenuToggleIcon = menuToggleIcon || null;\n\t\tif (this.options.icons['menu.open'] && this.options.icons['menu.close']) {\n\t\t\tmenuToggleIcon = this.options.icons[submenu.hidden ? 'menu.open' : 'menu.close'];\n\t\t\tif (typeof menuToggleIcon == 'string') {\n\t\t\t\tconst menuToggleIconClass = menuToggleIcon;\n\t\t\t\tmenuToggleIcon = document.createElement('i');\n\t\t\t\tmenuToggleIcon.setAttribute('aria-hidden', true);\n\t\t\t\tmenuToggleIconClass.split(' ').forEach((iconClass) => {\n\t\t\t\t\tmenuToggleIcon.classList.add(iconClass);\n\t\t\t\t});\n\t\t\t} else if (typeof menuToggleIcon == 'object' && typeof menuToggleIcon.cloneNode == 'function') {\n\t\t\t\tmenuToggleIcon = menuToggleIcon.cloneNode(true);\n\t\t\t} else if (typeof menuToggleIcon == 'function') {\n\t\t\t\tmenuToggleIcon = menuToggleIcon();\n\t\t\t}\n\t\t}\n\t\treturn menuToggleIcon;\n\t}\n\n\t/**\n\t * Merge array of new options with default options\n\t *\n\t * @param {Object} options\n\t * @param {(Object|null)} defaults\n\t * @returns {Object}\n\t */\n\tmergeOptions(options, defaults) {\n\t\tif (defaults == null) {\n\t\t\tdefaults = this.defaultOptions;\n\t\t}\n\t\tlet keys = Object.keys(options);\n\t\tif (!keys.length) {\n\t\t\treturn defaults;\n\t\t}\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key = keys[i];\n\t\t\tif (defaults[key] !== null) {\n\t\t\t\tif (typeof defaults[key] === 'object') {\n\t\t\t\t\tObject.assign(options[key], this.mergeOptions(defaults[key], options[key]));\n\t\t\t\t} else {\n\t\t\t\t\tdefaults[key] = options[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tObject.assign(options || {}, defaults);\n\t\treturn options;\n\t}\n\n\t/**\n\t * Get (mostly) unique identifier\n\t *\n\t * @returns {Number}\n\t */\n\tgetID() {\n\t\treturn Date.now();\n\t}\n\n\t/**\n\t * Get root menu object\n\t *\n\t * @returns {Object}\n\t */\n\tgetMenu() {\n\t\treturn this.menu;\n\t}\n\n\t/**\n\t * Get array of all menu objects\n\t *\n\t * @returns {Object}\n\t */\n\t getMenuObjects() {\n\t\treturn this.menuObjects;\n\t}\n\n\t/**\n\t * Initialize polyfills\n\t */\n\tpolyfills() {\n\n\t\t// Polyfill NodeList.forEach (IE11)\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\n\t\tif ('NodeList' in window && !NodeList.prototype.forEach) {\n\t\t\tNodeList.prototype.forEach = function (callback, thisArg) {\n\t\t\t\tthisArg = thisArg || window;\n\t\t\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\t\t\tcallback.call(thisArg, this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Polyfill Object.assign (IE11)\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\t\tif (typeof Object.assign !== 'function') {\n\t\t\t// Must be writable: true, enumerable: false, configurable: true\n\t\t\tObject.defineProperty(Object, \"assign\", {\n\t\t\t\tvalue: function assign(target, varArgs) { // .length of function is 2\n\t\t\t\t\tif (target === null || target === undefined) {\n\t\t\t\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t\t\t\t}\n\n\t\t\t\t\tlet to = Object(target);\n\n\t\t\t\t\tfor (let i = 1; i < arguments.length; i++) {\n\t\t\t\t\t\tlet nextSource = arguments[i];\n\n\t\t\t\t\t\tif (nextSource !== null && nextSource !== undefined) {\n\t\t\t\t\t\t\tfor (let nextKey in nextSource) {\n\t\t\t\t\t\t\t\t// Avoid bugs when hasOwnProperty is shadowed\n\t\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t\t\t\t\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn to;\n\t\t\t\t},\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t}\n\t}\n}\n","import boringmenu from './boringmenu.js';\n\nwindow.boringmenu = boringmenu;\n"],"names":["window","boringmenu","addClasses","menu","classes","currentPath","location","pathname","replace","querySelectorAll","item","forEach","classList","add","itemActive","parentNode","tagName","childItem","firstChild","contains","itemParent","matches","this","options","selectors","findSubMenus","depth","submenu","querySelector","menuNum","setAttribute","id","hidden","insertBefore","getToggle","menuObjects","push","toggleMenu","menuToggle","menuToggleText","menuToggleIcon","hiddenState","triggerEvent","isRecursive","nodeValue","labels","getToggleIcon","replaceChild","mode","menuObject","dispatchEvent","CustomEvent","bubbles","cancelable","detail","menuDepth","getAttribute","document","createElement","toggle","menuToggleTextContainer","toggleTextContainer","appendChild","createTextNode","addEventListener","event","stopPropagation","indexOf","keyCode","preventDefault","icons","menuToggleIconClass","split","iconClass","cloneNode","mergeOptions","defaults","defaultOptions","keys","Object","length","i","key","assign","getID","Date","now","getMenu","getMenuObjects","polyfills","NodeList","prototype","callback","thisArg","call","defineProperty","value","target","varArgs","TypeError","to","arguments","nextSource","nextKey","hasOwnProperty","writable","configurable","constructor","JSON","parse","e"],"version":3,"file":"boringmenu.min.js.map"}